package MiniProjet;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JFormattedTextField;
import com.toedter.calendar.JCalendar;
import com.toedter.calendar.JDateChooser;
import java.awt.Font;
import javax.swing.border.TitledBorder;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class Reserver {

	private JFrame frame;
	public static int cpt=1;
	public static int numRooms = 0;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Reserver window = new Reserver();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Reserver() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
		frame = new JFrame();
		frame.getContentPane().setBackground(new Color(158, 158, 158));
		frame.setBounds(100, 100, 461, 415);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(192, 192, 192));
		panel.setBounds(49, 40, 324, 57);
		frame.getContentPane().add(panel);
		panel.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("La date d'arrivee       :");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel.setBounds(28, 11, 167, 14);
		panel.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("La date de depart     :");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel_1.setBounds(28, 34, 174, 14);
		panel.add(lblNewLabel_1);
		
		JDateChooser dateChooser = new JDateChooser();
		dateChooser.setBounds(203, 30, 95, 20);
		panel.add(dateChooser);
		
		JDateChooser dateChooser_1 = new JDateChooser();
		dateChooser_1.setBounds(203, 5, 95, 20);
		panel.add(dateChooser_1);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(new Color(192, 192, 192));
		panel_1.setBorder(new TitledBorder(null, "Chambre 1", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		panel_1.setBounds(49, 130, 324, 174);
		frame.getContentPane().add(panel_1);
		panel_1.setLayout(null);
		
		JLabel lblNewLabel_2 = new JLabel("Categorie du chambre :");
		lblNewLabel_2.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel_2.setBounds(10, 33, 162, 14);
		panel_1.add(lblNewLabel_2);
		
		JLabel lblNewLabel_3 = new JLabel("Nombre d'adulte          :");
		lblNewLabel_3.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel_3.setBounds(10, 73, 181, 14);
		panel_1.add(lblNewLabel_3);
		
		JLabel lblNewLabel_4 = new JLabel("Nombre d'enfant         :");
		lblNewLabel_4.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel_4.setBounds(10, 112, 162, 14);
		panel_1.add(lblNewLabel_4);
		
		JComboBox comboBox = new JComboBox();
		comboBox.setModel(new DefaultComboBoxModel(new String[] {"Simple", "Double", "Suite"}));
		comboBox.setBounds(191, 31, 99, 22);
		panel_1.add(comboBox);
		
		JSpinner spinner = new JSpinner();
		spinner.setModel(new SpinnerNumberModel(1, 1, 2, 1));
		spinner.setBounds(191, 72, 47, 20);
		spinner.setValue(1);
		panel_1.add(spinner);
		
		JSpinner spinner_1 = new JSpinner();
		spinner_1.setModel(new SpinnerNumberModel(0, 0, 2, 1));
		spinner_1.setBounds(191, 111, 47, 20);
        List<JLabel> labels = new ArrayList<>();
		List<JSpinner> spinners = new ArrayList<>();

		spinner_1.addChangeListener(new ChangeListener() {
		    public void stateChanged(ChangeEvent e) {
		    	//Object source = e.getSource();
		    	//if(source.equals(spinner_1)) {
		    		int enfantCount = (int) spinner_1.getValue();
    		        if (enfantCount < labels.size()) {
    		            for (int i = enfantCount; i < labels.size(); i++) {
    		            	panel_1.remove(labels.get(i));
    		                panel_1.remove(spinners.get(i));
    		            }
    		            labels.subList(enfantCount, labels.size()).clear();
    		            spinners.subList(enfantCount, spinners.size()).clear();
    		        } else {
    		            for (int i = labels.size() + 1; i <= enfantCount; i++) {
    		                JLabel label = new JLabel("enfant " + i);
    		                label.setBounds(33+(i-1)*60, 129, 49, 14);
    		                panel_1.add(label);
    		                labels.add(label);

    		                JSpinner enfantSpinner = new JSpinner();
    		                enfantSpinner.setModel(new SpinnerNumberModel(0, 0, 12, 1));
    		                enfantSpinner.setBounds(33+(i-1)*60, 143, 40, 20);
    		                panel_1.add(enfantSpinner);
    		                spinners.add(enfantSpinner);
    		            }
    		        }
    		        panel_1.revalidate();
    		        panel_1.repaint();
    		    }
		   // }
		    
		        
		});
		panel_1.add(spinner_1);
		
		
		JLabel lblNewLabel_5 = new JLabel("Reserver");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 16));
		lblNewLabel_5.setBounds(179, 15, 93, 14);
		frame.getContentPane().add(lblNewLabel_5);
		
		JButton btnNewButton_1 = new JButton("<");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				frame.dispose();
				Accueil ah = new Accueil();
                ah.getFrame().setTitle("Welcome");
                ah.getFrame().setVisible(true);
			}
		});
		btnNewButton_1.setBounds(10, 6, 54, 23);
		frame.getContentPane().add(btnNewButton_1);
		
		
		
		
		

		
		JButton btnNewButton_2 = new JButton("Annuler");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				dateChooser.setDate(null);
		        dateChooser_1.setDate(null);
		        comboBox.setSelectedIndex(0);
		        spinner.setValue(1);
		        spinner_1.setValue(0);
			}
		});
		btnNewButton_2.setBounds(92, 338, 89, 23);
		frame.getContentPane().add(btnNewButton_2);
		
		JButton btnNewButton_3 = new JButton("Rechercher");
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				 String arrivalDate = dateChooser_1.getDate().toString();
			        String departureDate = dateChooser.getDate().toString();
			        String category = comboBox.getSelectedItem().toString();
			        int numAdults = (int) spinner.getValue();
			        int numChildren = (int) spinner_1.getValue();
			}
		});
		btnNewButton_3.setBounds(230, 338, 104, 23);
		frame.getContentPane().add(btnNewButton_3);
		
		JPanel[] roomPanels = new JPanel[10]; // array to store the room panels
		 
		JButton btnNewButton = new JButton("Ajouter une autre chambre");
		btnNewButton.setBounds(154, 304, 219, 23);
		btnNewButton.addActionListener(new ActionListener() {
		    public void actionPerformed(ActionEvent e) {
		        if (e.getSource() == btnNewButton) {
		            cpt++;
		            JPanel panel = new JPanel();
		            panel.setBackground(new Color(192, 192, 192));
		            panel.setBorder(new TitledBorder(null, "Chambre "+cpt, TitledBorder.LEADING, TitledBorder.TOP, null, null));
		            panel.setBounds(49, 130 + (cpt - 1) * 180, 324, 174);
		            panel.setLayout(null);
		            btnNewButton.setBounds(154, 304+ (cpt-1) * 180, 219, 23);
		            btnNewButton_2.setBounds(92, 338+ (cpt-1) * 180, 89, 23);
		            btnNewButton_3.setBounds(230, 338+ (cpt-1) * 180, 104, 23);
		            JLabel lblNewLabel_2 = new JLabel("Categorie du chambre :");
		            lblNewLabel_2.setFont(new Font("Tahoma", Font.PLAIN, 14));
		            lblNewLabel_2.setBounds(10, 33, 162, 14);
		            panel.add(lblNewLabel_2);

		            JLabel lblNewLabel_3 = new JLabel("Nombre d'adulte          :");
		            lblNewLabel_3.setFont(new Font("Tahoma", Font.PLAIN, 14));
		            lblNewLabel_3.setBounds(10, 73, 181, 14);
		            panel.add(lblNewLabel_3);

		            JLabel lblNewLabel_4 = new JLabel("Nombre d'enfant         :");
		            lblNewLabel_4.setFont(new Font("Tahoma", Font.PLAIN, 14));
		            lblNewLabel_4.setBounds(10, 112, 162, 14);
		            panel.add(lblNewLabel_4);

		            JComboBox comboBox = new JComboBox();
		            comboBox.setModel(new DefaultComboBoxModel(new String[] {"Simple", "Double", "Suite"}));
		            comboBox.setBounds(191, 31, 99, 22);
		            panel.add(comboBox);

		            JSpinner spinner = new JSpinner();
		            spinner.setBounds(191, 72, 47, 20);
		            spinner.setModel(new SpinnerNumberModel(1, 1, 2, 1));
		            spinner.setValue(1);
		            panel.add(spinner);

		            JSpinner spinner_1 = new JSpinner();
		    		spinner_1.setModel(new SpinnerNumberModel(0, 0, 2, 1));
		    		spinner_1.setBounds(191, 111, 47, 20);
		    		frame.getContentPane().add(panel);
		            roomPanels[numRooms] = panel;
		            numRooms++;
		    		
		    		


		            JButton btnDelete = new JButton("Supprimer");
		            btnDelete.addActionListener(new ActionListener() {
		            	public void actionPerformed(ActionEvent e) {
        // find the index of the panel to be removed
        int indexToRemove = -1;
        for (int i = 0; i < numRooms; i++) {
            if (roomPanels[i] == panel) {
                indexToRemove = i;
                break;
            }
        }
        if (indexToRemove != -1) {
            // remove the panel from the array and from the GUI
            frame.getContentPane().remove(roomPanels[indexToRemove]);
            for (int i = indexToRemove + 1; i < numRooms; i++) {
                // adjust the positions of the remaining panels
                int newY = roomPanels[i].getY() - 180;
                roomPanels[i].setLocation(roomPanels[i].getX(), newY);
                // update the title of the panel
                TitledBorder border = (TitledBorder) roomPanels[i].getBorder();
                border.setTitle("Chambre " + (i+1));
            }
            numRooms--;
            // adjust the position of the "add room" button
            btnNewButton.setBounds(btnNewButton.getX(), btnNewButton.getY() - 180, btnNewButton.getWidth(), btnNewButton.getHeight());
        }
        // refresh the GUI
        frame.getContentPane().revalidate();
        frame.getContentPane().repaint();
    }
});
btnDelete.setBounds(220, 139, 100, 23);
panel.add(btnDelete);
		            
		            List<JLabel> labels = new ArrayList<>();
		    		List<JSpinner> spinners = new ArrayList<>();

		    		spinner_1.addChangeListener(new ChangeListener() {
		    		    public void stateChanged(ChangeEvent e) {
		    		    	//Object source = e.getSource();
		    		    	//if(source.equals(spinner_1)) {
		    		    		int enfantCount = (int) spinner_1.getValue();
			    		        if (enfantCount < labels.size()) {
			    		            for (int i = enfantCount; i < labels.size(); i++) {
			    		                panel.remove(labels.get(i));
			    		                panel.remove(spinners.get(i));
			    		            }
			    		            labels.subList(enfantCount, labels.size()).clear();
			    		            spinners.subList(enfantCount, spinners.size()).clear();
			    		        } else {
			    		            for (int i = labels.size() + 1; i <= enfantCount; i++) {
			    		                JLabel label = new JLabel("enfant " + i);
			    		                label.setBounds(33+(i-1)*60, 129, 49, 14);
			    		                panel.add(label);
			    		                labels.add(label);

			    		                JSpinner enfantSpinner = new JSpinner();
			    		                enfantSpinner.setModel(new SpinnerNumberModel(0, 0, 12, 1));
			    		                enfantSpinner.setBounds(33+(i-1)*60, 143, 40, 20);
			    		                panel.add(enfantSpinner);
			    		                spinners.add(enfantSpinner);
			    		            }
			    		        }
			    		        panel.revalidate();
			    		        panel.repaint();
			    		    }
		    		   // }
		    		    
		    		        
		    		});
		    		panel.add(spinner_1);
		            panel.add(btnDelete);

		            frame.getContentPane().add(panel);
		            frame.setBounds(100, 100, 441, 394 + (cpt - 1) * 190);
		            
		        }
		    }
		});
		frame.getContentPane().add(btnNewButton);
	}

	public JFrame getFrame() {
		return frame;
	}

	public void setFrame(JFrame frame) {
		this.frame = frame;
	}
}
